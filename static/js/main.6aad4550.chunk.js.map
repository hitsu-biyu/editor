{"version":3,"sources":["../node_modules/prettier sync","state/action-types/index.ts","hooks/use-typed-selector.ts","state/reducers/cellsReducer.ts","state/reducers/bundlesReducer.ts","state/reducers/index.ts","state/store.ts","bundler/index.ts","bundler/plugins/fetch-plugin.ts","bundler/plugins/unpkg-path-plugin.ts","state/action-creators/index.ts","hooks/use-actions.ts","components/action-bar.tsx","components/code-editor.tsx","components/preview.tsx","components/resizable.tsx","components/code-cell.tsx","hooks/use-cumulative-code.ts","components/text-editor.tsx","components/cell-list-item.tsx","components/add-cell.tsx","components/cell-list.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ActionType","useTypedSelector","useSelector","initialState","loading","error","order","data","reducer","produce","state","action","type","UPDATE_CELL","payload","content","DELETE_CELL","filter","MOVE_CELL","direction","index","findIndex","targetIndex","length","INSERT_CELL_AFTER","cell","randomId","foundIndex","unshift","splice","Math","random","toString","substr","BUNDLE_START","cellId","err","BUNDLE_COMPLETE","bundle","reducers","combineReducers","cells","cellsReducer","bundles","bundlesReducer","store","createStore","applyMiddleware","thunk","dispatch","service","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","loader","contents","args","a","getItem","path","cachedResult","axios","get","request","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem","rawCode","esbuild","worker","wasmURL","entryPoints","write","plugins","onResolve","namespace","href","define","global","jsxFactory","jsxFragment","outputFiles","text","message","updateCell","deleteCell","insertCellAfter","cellType","moveCell","createBundle","input","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","ActionBar","className","onClick","CodeEditor","onChange","initialValue","editorRef","useRef","unformatted","current","getModel","getValue","formatted","prettier","format","parser","useTabs","semi","singleQuote","setValue","editorDidMount","monacoEditor","onDidChangeModelContent","updateOptions","tabSize","Highlighter","window","monaco","codeShift","highLightOnDidChangeModelContent","undefined","value","theme","language","height","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","html","Preview","iframe","useEffect","srcdoc","setTimeout","contentWindow","postMessage","title","ref","sandbox","srcDoc","Resizable","resizableProps","children","useState","innerHeight","setInnerHeight","innerWidth","setInnerWidth","width","setWidth","timer","listener","clearTimeout","addEventListener","removeEventListener","maxConstraints","Infinity","minConstraints","resizeHandles","onResizeStop","event","size","CodeCell","cumulativeCode","orderedCells","map","c","push","join","style","display","flexDirection","max","TextEditor","editing","setEditing","target","contains","document","capture","v","Markdown","source","CellListItem","child","AddCell","forceVisible","previousCellId","CellList","renderedCells","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.6aad4550.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 165;","export enum ActionType {\n  UPDATE_CELL = \"update_cell\",\n  DELETE_CELL = \"delete_cell\",\n  INSERT_CELL_AFTER = \" insert_cell_after\",\n  MOVE_CELL = \"move_cell\",\n  BUNDLE_START = \"bundle_start\",\n  BUNDLE_COMPLETE = \"bundle_complete\",\n}\n","import { useSelector, TypedUseSelectorHook } from \"react-redux\";\nimport { RootState } from \"../state\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import produce from \"immer\";\nimport { ActionType } from \"../action-types\";\nimport { Action } from \"../actions\";\nimport { Cell } from \"../cell\";\n\ninterface CellsState {\n  loading: boolean;\n  error: string | null;\n  order: string[];\n  data: {\n    [key: string]: Cell;\n  };\n}\n\nconst initialState: CellsState = {\n  loading: false,\n  error: null,\n  order: [],\n  data: {},\n};\n\nconst reducer = produce((state: CellsState = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.UPDATE_CELL:\n      const { id, content } = action.payload;\n      state.data[id].content = content;\n\n      return state;\n\n    case ActionType.DELETE_CELL:\n      delete state.data[action.payload];\n      state.order = state.order.filter((id) => id !== action.payload);\n\n      return state;\n\n    case ActionType.MOVE_CELL:\n      const { direction } = action.payload;\n      const index = state.order.findIndex((id) => id === action.payload.id);\n      const targetIndex = direction === \"up\" ? index - 1 : index + 1;\n\n      if (targetIndex < 0 || targetIndex > state.order.length - 1) {\n        return state;\n      }\n\n      state.order[index] = state.order[targetIndex];\n      state.order[targetIndex] = action.payload.id;\n\n      return state;\n\n    case ActionType.INSERT_CELL_AFTER:\n      const cell: Cell = {\n        content: \"\",\n        type: action.payload.type,\n        id: randomId(),\n      };\n\n      state.data[cell.id] = cell;\n\n      const foundIndex = state.order.findIndex(\n        (id) => id === action.payload.id\n      );\n\n      if (foundIndex < 0) {\n        state.order.unshift(cell.id);\n      } else {\n        state.order.splice(foundIndex + 1, 0, cell.id);\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n});\n\nconst randomId = () => {\n  return Math.random().toString(36).substr(2, 5);\n};\n\nexport default reducer;\n","import produce from \"immer\";\nimport { ActionType } from \"../action-types\";\nimport { Action } from \"../actions\";\n\ninterface BundlesState {\n  [key: string]:\n    | {\n        loading: boolean;\n        code: string;\n        err: string;\n      }\n    | undefined;\n}\n\nconst initialState: BundlesState = {};\n\nconst reducer = produce(\n  (state: BundlesState = initialState, action: Action): BundlesState => {\n    switch (action.type) {\n      case ActionType.BUNDLE_START:\n        state[action.payload.cellId] = {\n          loading: true,\n          code: \"\",\n          err: \"\",\n        };\n        return state;\n\n      case ActionType.BUNDLE_COMPLETE:\n        state[action.payload.cellId] = {\n          loading: false,\n          code: action.payload.bundle.code,\n          err: action.payload.bundle.err,\n        };\n        return state;\n\n      default:\n        return state;\n    }\n  }\n);\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport cellsReducer from \"./cellsReducer\";\nimport bundlesReducer from \"./bundlesReducer\";\n\nconst reducers = combineReducers({\n  cells: cellsReducer,\n  bundles: bundlesReducer,\n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport { ActionType } from \"./action-types\";\n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\n\nstore.dispatch({\n  type: ActionType.INSERT_CELL_AFTER,\n  payload: {\n    id: null,\n    type: \"code\",\n  },\n});\n\nstore.dispatch({\n  type: ActionType.INSERT_CELL_AFTER,\n  payload: {\n    id: null,\n    type: \"text\",\n  },\n});\n\nstore.dispatch({\n  type: ActionType.INSERT_CELL_AFTER,\n  payload: {\n    id: null,\n    type: \"code\",\n  },\n});\n\nstore.dispatch({\n  type: ActionType.INSERT_CELL_AFTER,\n  payload: {\n    id: null,\n    type: \"text\",\n  },\n});\n","import * as esbuild from \"esbuild-wasm\";\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\n\nlet service: esbuild.Service;\nconst bundle = async (rawCode: string) => {\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\",\n    });\n  }\n\n  try {\n    const result = await service.build({\n      entryPoints: [\"index.js\"],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n        global: \"window\",\n      },\n      jsxFactory: \"_React.createElement\",\n      jsxFragment: \"_React.Fragment\",\n    });\n\n    return {\n      code: result.outputFiles[0].text,\n      err: \"\",\n    };\n  } catch (err) {\n    return {\n      code: \"\",\n      err: err.message,\n    };\n  }\n};\n\nexport default bundle;\n","import * as esbuild from \"esbuild-wasm\";\nimport axios from \"axios\";\nimport localForage from \"localforage\";\n\nconst fileCache = localForage.createInstance({\n  name: \"filecache\",\n});\n\nexport const fetchPlugin = (inputCode: string) => {\n  return {\n    name: \"fetch-plugin\",\n    setup(build: esbuild.PluginBuild) {\n      build.onLoad({ filter: /^index\\.js$/ }, () => {\n        return {\n          loader: \"jsx\",\n          contents: inputCode,\n        };\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n          args.path\n        );\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n      });\n\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n          args.path\n        );\n\n        if (cachedResult) {\n          return cachedResult;\n        }\n\n        const { data, request } = await axios.get(args.path);\n\n        const escaped = data\n          .replace(/\\n/g, \"\")\n          .replace(/\"/g, '\\\\\"')\n          .replace(/'/g, \"\\\\'\");\n\n        const contents = `\n          const style = document.createElement('style');\n          style.innerText = '${escaped}';\n          document.head.appendChild(style);\n          `;\n\n        const result: esbuild.OnLoadResult = {\n          loader: \"jsx\",\n          contents,\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\n        };\n\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        const { data, request } = await axios.get(args.path);\n\n        const result: esbuild.OnLoadResult = {\n          loader: \"jsx\",\n          contents: data,\n          resolveDir: new URL(\"./\", request.responseURL).pathname,\n        };\n\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n    },\n  };\n};\n","import * as esbuild from \"esbuild-wasm\";\n\nexport const unpkgPathPlugin = () => {\n  return {\n    name: \"unpkg-path-plugin\",\n    setup(build: esbuild.PluginBuild) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({ filter: /^index\\.js$/ }, () => {\n        return { path: \"index.js\", namespace: \"a\" };\n      });\n\n      // Handle relative paths in a module\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\n        return {\n          namespace: \"a\",\n          path: new URL(args.path, \"https://unpkg.com\" + args.resolveDir + \"/\")\n            .href,\n        };\n      });\n\n      // Handle main file of a module\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        return {\n          namespace: \"a\",\n          path: `https://unpkg.com/${args.path}`,\n        };\n      });\n    },\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionType } from \"../action-types\";\nimport {\n  Action,\n  Direction,\n  UpdateCellAction,\n  DeleteCellAction,\n  InsertCellAfterAction,\n  MoveCellAction,\n} from \"../actions\";\nimport { CellTypes } from \"../cell\";\nimport bundle from \"../../bundler\";\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: { id, content },\n  };\n};\n\nexport const deleteCell = (id: string): DeleteCellAction => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id,\n  };\n};\n\nexport const insertCellAfter = (\n  id: string | null,\n  cellType: CellTypes\n): InsertCellAfterAction => {\n  return {\n    type: ActionType.INSERT_CELL_AFTER,\n    payload: {\n      id,\n      type: cellType,\n    },\n  };\n};\n\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction,\n    },\n  };\n};\n\nexport const createBundle = (cellId: string, input: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.BUNDLE_START,\n      payload: {\n        cellId,\n      },\n    });\n\n    const result = await bundle(input);\n\n    dispatch({\n      type: ActionType.BUNDLE_COMPLETE,\n      payload: {\n        cellId,\n        bundle: result,\n      },\n    });\n  };\n};\n","import { useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../state\";\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return useMemo(() => {\n    return bindActionCreators(actionCreators, dispatch);\n  }, [dispatch]);\n};\n","import { useActions } from \"../hooks/use-actions\";\nimport \"./action-bar.css\";\n\ninterface ActionBarProps {\n  id: string;\n}\n\nconst ActionBar: React.FC<ActionBarProps> = ({ id }) => {\n  const { moveCell, deleteCell } = useActions();\n  return (\n    <div className=\"action-bar\">\n      <button\n        className=\"button is-primary is-small\"\n        onClick={() => moveCell(id, \"up\")}\n      >\n        <span className=\"icon\">\n          <i className=\"fas fa-arrow-up\"></i>\n        </span>\n      </button>\n\n      <button\n        className=\"button is-primary is-small\"\n        onClick={() => moveCell(id, \"down\")}\n      >\n        <span className=\"icon\">\n          <i className=\"fas fa-arrow-down\"></i>\n        </span>\n      </button>\n\n      <button\n        className=\"button is-primary is-small\"\n        onClick={() => deleteCell(id)}\n      >\n        <span className=\"icon\">\n          <i className=\"fas fa-times\"></i>\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default ActionBar;\n","import \"./code-editor.css\";\nimport \"./syntax.css\";\nimport MonacoEditor, { EditorDidMount } from \"@monaco-editor/react\";\nimport prettier from \"prettier\";\nimport parser from \"prettier/parser-babel\";\nimport { useRef } from \"react\";\nimport codeShift from \"jscodeshift\";\nimport Highlighter from \"monaco-jsx-highlighter\";\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\n  const editorRef = useRef<any>();\n\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    editorRef.current = monacoEditor;\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 });\n\n    const highlighter = new Highlighter(\n      // @ts-ignore\n      window.monaco,\n      codeShift,\n      monacoEditor\n    );\n    highlighter.highLightOnDidChangeModelContent(\n      () => {},\n      () => {},\n      undefined,\n      () => {}\n    );\n  };\n\n  const onFormatClick = () => {\n    // get current value from editor\n    const unformatted = editorRef.current.getModel().getValue();\n\n    // format that value\n    const formatted = prettier\n      .format(unformatted, {\n        parser: \"babel\",\n        plugins: [parser],\n        useTabs: false,\n        semi: true,\n        singleQuote: true,\n      })\n      .replace(/\\n$/, \"\");\n\n    // set the formatted value back in the editor\n    editorRef.current.setValue(formatted);\n  };\n\n  return (\n    <div className=\"editor-wrapper\">\n      <button\n        className=\"button button-format is-primary is-small\"\n        onClick={onFormatClick}\n      >\n        Format\n      </button>\n      <MonacoEditor\n        editorDidMount={onEditorDidMount}\n        value={initialValue}\n        theme=\"dark\"\n        language=\"javascript\"\n        height=\"100%\"\n        options={{\n          wordWrap: \"on\",\n          minimap: { enabled: false },\n          showUnused: false,\n          folding: false,\n          lineNumbersMinChars: 3,\n          fontSize: 14,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditor;\n","import { useRef, useEffect } from \"react\";\nimport \"./preview.css\";\n\ninterface PreviewProps {\n  code: string;\n  err: string;\n}\n\nconst html = `\n    <html>\n      <head>\n        <style>html { background-color: white; }</style>\n      </head>\n      <body>\n        <div id='root'></div>\n        <script>\n        const handleError = (err) => {\n          const root = document.querySelector(\"#root\");\n          root.innerHTML =\n            '<div style=\"color: red\"><h4>Runtime Error</h4>' + err + \"</div>\";\n          throw err;\n        };\n\n        window.addEventListener(\"error\", (event) => {\n          event.preventDefault();\n          handleError(event.error);\n        });\n\n        window.addEventListener('message', (event) => {\n          try {\n            eval(event.data);\n          } catch (err) {\n            handleError(err);\n          }\n        }, false)\n        </script>\n      </body>\n    </html>\n  `;\n\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\n  const iframe = useRef<any>();\n\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, \"*\");\n    }, 50);\n  }, [code]);\n\n  return (\n    <div className=\"preview-wrapper\">\n      <iframe\n        title=\"code preview\"\n        ref={iframe}\n        sandbox=\"allow-scripts\"\n        srcDoc={html}\n      />\n      {err && <div className=\"preview-error\">{err}</div>}\n    </div>\n  );\n};\n\nexport default Preview;\n","import { ResizableBox, ResizableBoxProps } from \"react-resizable\";\nimport { useEffect, useState } from \"react\";\nimport \"./resizable.css\";\n\ninterface ResizableProps {\n  direction: \"horizontal\" | \"vertical\";\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  let resizableProps: ResizableBoxProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\n\n  useEffect(() => {\n    let timer: any;\n    const listener = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n        if (window.innerWidth * 0.75 < width) {\n          setWidth(window.innerWidth * 0.75);\n        }\n      }, 100);\n    };\n    window.addEventListener(\"resize\", listener);\n\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, [width]);\n\n  if (direction === \"horizontal\") {\n    resizableProps = {\n      className: \"resize-horizontal\",\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      minConstraints: [innerWidth * 0.2, Infinity],\n      height: Infinity,\n      width,\n      resizeHandles: [\"e\"],\n      onResizeStop: (event, data) => {\n        setWidth(data.size.width);\n      },\n    };\n  } else {\n    resizableProps = {\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      minConstraints: [Infinity, 24],\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n    };\n  }\n\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n","import \"./code-cell.css\";\nimport { useEffect } from \"react\";\nimport { Cell } from \"../state\";\nimport CodeEditor from \"./code-editor\";\nimport Preview from \"./preview\";\nimport Resizable from \"./resizable\";\nimport { useActions } from \"../hooks/use-actions\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport { useCumulativeCode } from \"../hooks/use-cumulative-code\";\n\ninterface CodeCellProps {\n  cell: Cell;\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n  const { updateCell, createBundle } = useActions();\n  const bundle = useTypedSelector((state) => state.bundles[cell.id]);\n  const cumulativeCode = useCumulativeCode(cell.id);\n\n  useEffect(() => {\n    if (!bundle) {\n      createBundle(cell.id, cumulativeCode);\n      return;\n    }\n\n    const timer = setTimeout(async () => {\n      createBundle(cell.id, cumulativeCode);\n    }, 800);\n\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cumulativeCode, cell.id, createBundle]);\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div\n        style={{\n          height: \"calc(100% - 10px)\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value)}\n          />\n        </Resizable>\n        <div className=\"progress-wrapper\">\n          {!bundle || bundle.loading ? (\n            <div className=\"progress-cover\">\n              <progress className=\"progress is-small is-primary\" max=\"100\">\n                Loading\n              </progress>\n            </div>\n          ) : (\n            <Preview code={bundle.code} err={bundle.err} />\n          )}\n        </div>\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n","import { useTypedSelector } from \"./use-typed-selector\";\n\nexport const useCumulativeCode = (cellId: string) => {\n  return useTypedSelector((state) => {\n    const { data, order } = state.cells;\n    const orderedCells = order.map((id) => data[id]);\n\n    const printFunc = `\n    import _React from 'react';\n    import _ReactDOM from 'react-dom';\n    var print = (value) => {\n      const root = document.querySelector('#root');\n\n      if (typeof value === 'object') {\n        if (value.$$typeof && value.props) {\n          _ReactDOM.render(value, root);\n        } else {\n          root.innerHTML = JSON.stringify(value);\n        }\n      } else {\n        root.innerHTML = value;\n      }\n    };\n  `;\n    const printFuncNoop = \"var print = () => {}\";\n    const cumulativeCode = [];\n\n    for (let c of orderedCells) {\n      if (c.type === \"code\") {\n        if (c.id === cellId) {\n          cumulativeCode.push(printFunc);\n        } else {\n          cumulativeCode.push(printFuncNoop);\n        }\n        cumulativeCode.push(c.content);\n      }\n      if (c.id === cellId) {\n        break;\n      }\n    }\n    return cumulativeCode;\n  }).join(\"\\n\");\n};\n","import MDEditor from \"@uiw/react-md-editor\";\nimport \"./text-editor.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useActions } from \"../hooks/use-actions\";\nimport { Cell } from \"../state\";\n\ninterface TextEditorProps {\n  cell: Cell;\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({ cell }) => {\n  const [editing, setEditing] = useState(false);\n  const { updateCell } = useActions();\n  const ref = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (\n        ref.current &&\n        event.target &&\n        ref.current.contains(event.target as Node)\n      ) {\n        return;\n      }\n\n      setEditing(false);\n    };\n    document.addEventListener(\"click\", listener, { capture: true });\n\n    return () => {\n      document.removeEventListener(\"click\", listener, { capture: true });\n    };\n  }, []);\n\n  if (editing) {\n    return (\n      <div className=\"text-editor\" ref={ref}>\n        <MDEditor\n          value={cell.content}\n          onChange={(v) => updateCell(cell.id, v || \"\")}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-editor card\" onClick={() => setEditing(true)}>\n      <div className=\"card-content\">\n        <MDEditor.Markdown source={cell.content || \"Click to edit\"} />\n      </div>\n    </div>\n  );\n};\n\nexport default TextEditor;\n","import { Cell } from \"../state\";\nimport ActionBar from \"./action-bar\";\nimport CodeCell from \"./code-cell\";\nimport TextEditor from \"./text-editor\";\nimport \"./cell-list-item.css\";\n\ninterface CellListItemProps {\n  cell: Cell;\n}\n\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n  let child: JSX.Element;\n  if (cell.type === \"code\") {\n    child = (\n      <>\n        <div className=\"action-bar-wrapper\">\n          <ActionBar id={cell.id} />\n        </div>\n        <CodeCell cell={cell} />\n      </>\n    );\n  } else {\n    child = (\n      <>\n        <TextEditor cell={cell} />\n        <ActionBar id={cell.id} />\n      </>\n    );\n  }\n\n  return <div className=\"cell-list-item\">{child}</div>;\n};\n\nexport default CellListItem;\n","import \"./add-cell.css\";\nimport { useActions } from \"../hooks/use-actions\";\n\ninterface AddCellProps {\n  previousCellId: string | null;\n  forceVisible?: boolean;\n}\n\nconst AddCell: React.FC<AddCellProps> = ({ forceVisible, previousCellId }) => {\n  const { insertCellAfter } = useActions();\n\n  return (\n    <div className={`add-cell ${forceVisible && \"force-visible\"}`}>\n      <div className=\"add-buttons\">\n        <button\n          className=\"button is-rounded is-primary is-small\"\n          onClick={() => insertCellAfter(previousCellId, \"code\")}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-plus\"></i>\n          </span>\n          <span>Code</span>\n        </button>\n\n        <button\n          className=\"button is-rounded is-primary is-small\"\n          onClick={() => insertCellAfter(previousCellId, \"text\")}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-plus\"></i>\n          </span>\n          <span>Text</span>\n        </button>\n      </div>\n      <div className=\"divider\"></div>\n    </div>\n  );\n};\n\nexport default AddCell;\n","import \"./cell-list.css\";\nimport { Fragment } from \"react\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\nimport AddCell from \"./add-cell\";\n\nconst CellList: React.FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) => {\n    return order.map((id) => {\n      return data[id];\n    });\n  });\n\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <CellListItem cell={cell} />\n      <AddCell previousCellId={cell.id} />\n    </Fragment>\n  ));\n  return (\n    <div className=\"cell-list\">\n      <AddCell forceVisible={cells.length === 0} previousCellId={null} />\n      {renderedCells}\n    </div>\n  );\n};\n\nexport default CellList;\n","import ReactDOM from \"react-dom\";\nimport CellList from \"./components/cell-list\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./state\";\nimport \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div>\n        <CellList />\n      </div>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}